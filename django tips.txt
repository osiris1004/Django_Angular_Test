from pkg_resources import EggMetadata


CORS is a mechanism to allow interaction with resources hosted on different domains. 
For instance, one of the most common scenarios to apply it is with Ajax requests.
by deafout django comes with a security feature which block the api request comming from
diffrent domain.

- install django cors package usin 
*---pip install django-cors-headers---*


- (settings.py)register the cors module by adding an entry in the 
    INSTALLED_APPS='corsheaders' and in
    MIDDLEWARE = 'corsheaders.middleware.CorsMiddleWare'


- specify which domains we need to allow
    CORS_ORIGIN_ALLOW_ALL =True


-App are those little components that together make up your project. They are the features of your project. 
In our case (shopping site) it would be:
    Cart :- Which would have a logic for user selected items for purchase.
    Products :- Which would have a logic for products that the site is selling.
    Profile:- Which would have a logic for user information. 
django apps are created using 
*---python manage.py startapp EmployeeApp---*

-   Register our app in settings.py (to consiter the app in your project, specify it)
    INSTALLED_APPS='appName.apps.AppclassName' Eg
    INSTALLED_APPS='EmployeeApp.apps.EmployeeappConfig'

    register rest_framework package
    INSTALLED_APPS='rest_framework'


-create the models needed for our app
    A Django model is the built-in feature that Django uses to create tables, their fields, 
    and various constraints


- the command below generates the SQL commands for apps.
*---python manage.py makemigrations EmployeeApp---*

the command below execute those commands in your database file. So tables are  created after    
*---python manage.py migrate EmployeeApp---*


-Serialization is converting data structure(a byte, array, linked list, object) into a format that can be store.

-(views) write the api methode for a model views (department screen)

-Route the api. A route is the “name” you use to access endpoints, used in the URL. A route 
can have multiple endpoints associated with it, and which is used depends on the HTTP verb.
    
    For example, with the URL `http://example.com/wp-json/wp/v2/posts/123`:
    The “route” is wp/v2/posts/123 – The route doesn’t include wp-json because wp-json is the base path for the API itself.
    This route has 3 endpoints:
    GET triggers a get_item method, returning the post data to the client.
    PUT triggers an update_item method, taking the data to update, and returning the updated post data.
    DELETE triggers a delete_item method, returning the now-deleted post data to the client.
    1)creat a file urls.py in your app to perform rounting
    2) include those url in the urls file of your django project(eg Book_Library)

-Test your api in postman

-Media is the file you create to store images or videos.  go to your project settings and 
import os there. insert the following syntax below ""BASE_DIR = Path(__file__).resolve().parent.parent""
	MEDIA_URL = '/media/'
	MEDIA_ROOT = os.path.join(BASE_DIR,"media")
- create the api function for the media and set the routing process for it
	NB use static path to our app(Employee) so that we can access media file via url that is 
	
